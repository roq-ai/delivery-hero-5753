generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model customer_profile {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at        DateTime @default(now()) @db.Timestamp(6)
  updated_at        DateTime @default(now()) @db.Timestamp(6)
  customer_id       String?  @db.Uuid
  preferred_cuisine String?  @db.VarChar(255)
  user              user?    @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model menu {
  id            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String       @db.VarChar(255)
  description   String?      @db.VarChar(255)
  price         Int
  is_available  Boolean
  restaurant_id String       @db.Uuid
  created_at    DateTime     @default(now()) @db.Timestamp(6)
  updated_at    DateTime     @default(now()) @db.Timestamp(6)
  restaurant    restaurant   @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_item    order_item[]
}

model order {
  id                String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  total_price       Int
  order_date        DateTime     @db.Timestamp(6)
  delivery_address  String       @db.VarChar(255)
  delivery_city     String       @db.VarChar(255)
  delivery_state    String       @db.VarChar(255)
  delivery_zip_code String       @db.VarChar(255)
  user_id           String       @db.Uuid
  created_at        DateTime     @default(now()) @db.Timestamp(6)
  updated_at        DateTime     @default(now()) @db.Timestamp(6)
  user              user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_item        order_item[]
}

model order_item {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  quantity   Int
  price      Int
  menu_id    String   @db.Uuid
  order_id   String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  menu       menu     @relation(fields: [menu_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order      order    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model rating {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rating_rating Int
  review        String?    @db.VarChar(255)
  review_date   DateTime   @db.Timestamp(6)
  user_id       String     @db.Uuid
  restaurant_id String     @db.Uuid
  created_at    DateTime   @default(now()) @db.Timestamp(6)
  updated_at    DateTime   @default(now()) @db.Timestamp(6)
  restaurant    restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model restaurant {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  address     String?  @db.VarChar(255)
  city        String?  @db.VarChar(255)
  state       String?  @db.VarChar(255)
  zip_code    String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  menu        menu[]
  rating      rating[]
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email            String             @unique @db.VarChar(255)
  firstName        String?            @db.VarChar(255)
  lastName         String?            @db.VarChar(255)
  roq_user_id      String             @db.VarChar(255)
  tenant_id        String             @db.VarChar(255)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  customer_profile customer_profile[]
  order            order[]
  rating           rating[]
  restaurant       restaurant[]
}
